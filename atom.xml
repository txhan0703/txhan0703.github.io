<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>KoldTu&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-02-01T14:56:53.196Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Kold Tu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Spring学习笔记2：spring框架的搭建等</title>
    <link href="http://yoursite.com/2020/01/12/spring2/"/>
    <id>http://yoursite.com/2020/01/12/spring2/</id>
    <published>2020-01-12T03:05:45.000Z</published>
    <updated>2020-02-01T14:56:53.196Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Spring-Boot框架搭建和分类"><a href="#Spring-Boot框架搭建和分类" class="headerlink" title="Spring Boot框架搭建和分类"></a>Spring Boot框架搭建和分类</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2020/01/12/spring2/20190518173534439.png" alt="spring boot代码编写框架" title>                </div>                <div class="image-caption">spring boot代码编写框架</div>            </figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Spring-Boot框架搭建和分类&quot;&gt;&lt;a href=&quot;#Spring-Boot框架搭建和分类&quot; class=&quot;headerlink&quot; title=&quot;Spring Boot框架搭建和分类&quot;&gt;&lt;/a&gt;Spring Boot框架搭建和分类&lt;/h2&gt;&lt;figure c
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Spring学习笔记1：spring框架的原则和基础</title>
    <link href="http://yoursite.com/2020/01/12/Spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01%EF%BC%9Aspring%E6%A1%86%E6%9E%B6%E7%9A%84%E5%8E%9F%E5%88%99%E5%92%8C%E5%9F%BA%E7%A1%80/"/>
    <id>http://yoursite.com/2020/01/12/Spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01%EF%BC%9Aspring%E6%A1%86%E6%9E%B6%E7%9A%84%E5%8E%9F%E5%88%99%E5%92%8C%E5%9F%BA%E7%A1%80/</id>
    <published>2020-01-12T02:51:32.000Z</published>
    <updated>2020-01-12T09:05:47.752Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Spring框架搭建"><a href="#Spring框架搭建" class="headerlink" title="Spring框架搭建"></a>Spring框架搭建</h2><p>用idea搭好像挺容易，网上搜教程就是了</p><h2 id="Spring基础配置"><a href="#Spring基础配置" class="headerlink" title="Spring基础配置"></a>Spring基础配置</h2><p>spring框架本身有四大原则：</p><p>1：POJO：其实就是普通的java实体类（javabean）</p><p>2：依赖注入和基于接口编程</p><p>3：基于AOP的声明式编程</p><p>4：使用AOP和template减少模式化代码</p><h3 id="依赖注入"><a href="#依赖注入" class="headerlink" title="依赖注入"></a>依赖注入</h3><p>依赖注入指容器负责创建对象和维护对象间的依赖关系，而不是对象本身。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Spring框架搭建&quot;&gt;&lt;a href=&quot;#Spring框架搭建&quot; class=&quot;headerlink&quot; title=&quot;Spring框架搭建&quot;&gt;&lt;/a&gt;Spring框架搭建&lt;/h2&gt;&lt;p&gt;用idea搭好像挺容易，网上搜教程就是了&lt;/p&gt;
&lt;h2 id=&quot;Sprin
      
    
    </summary>
    
    
      <category term="-学习 -Spring" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0-Spring/"/>
    
    
      <category term="-java -Spring" scheme="http://yoursite.com/tags/java-Spring/"/>
    
  </entry>
  
  <entry>
    <title>关于Git的一些笔记</title>
    <link href="http://yoursite.com/2020/01/11/2020-01-11-%E5%85%B3%E4%BA%8EGit%E7%9A%84%E4%B8%80%E4%BA%9B%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2020/01/11/2020-01-11-%E5%85%B3%E4%BA%8EGit%E7%9A%84%E4%B8%80%E4%BA%9B%E7%AC%94%E8%AE%B0/</id>
    <published>2020-01-11T08:03:30.000Z</published>
    <updated>2020-01-11T08:05:43.269Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Git-clone"><a href="#Git-clone" class="headerlink" title="Git clone"></a>Git clone</h2><p>克隆一个版本库。大概的意思是在你本地的这个文件夹里设置了版本库，然后把云端的代码clone下来。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Git-clone&quot;&gt;&lt;a href=&quot;#Git-clone&quot; class=&quot;headerlink&quot; title=&quot;Git clone&quot;&gt;&lt;/a&gt;Git clone&lt;/h2&gt;&lt;p&gt;克隆一个版本库。大概的意思是在你本地的这个文件夹里设置了版本库，然后把云端的代码cl
      
    
    </summary>
    
    
      <category term="-学习 -环境搭建" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>论文阅读：Automated Decomposition of Build Targets</title>
    <link href="http://yoursite.com/2020/01/10/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%EF%BC%9AAutomated%20Decomposition%20of%20Build%20Targets/"/>
    <id>http://yoursite.com/2020/01/10/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%EF%BC%9AAutomated%20Decomposition%20of%20Build%20Targets/</id>
    <published>2020-01-10T07:29:14.000Z</published>
    <updated>2020-01-12T08:55:59.475Z</updated>
    
    <content type="html"><![CDATA[<h2 id="研究背景-amp-简介"><a href="#研究背景-amp-简介" class="headerlink" title="研究背景&amp;简介"></a>研究背景&amp;简介</h2><p>在代码大规模编译系统的构建过程中的target，有时存在未充分利用（underutilized）的现象。即有些target是未充分利用的，依赖这个target只是依赖其中一部分的文件。</p><p>target未充分利用的现象会导致一系列问题：代码不够模块化，不必要的构建和测试触发器，不必要的编译等待等待。如果可以将未充分利用的target分解成较小的目标，可以使得代码更加模块化，减少依赖等待时间从而加快编译速度。</p><p>作者分析了Google的构建系统（Google build system），提出了两个工具DECOMPOSER和REFINER，用于识别和重构未充分利用的目标。</p><p>（该论文与我组目前的研究方向十分契合，虽然需要分析的构建系统不一样但思路十分值得借鉴。）</p><a id="more"></a><h2 id="构建系统"><a href="#构建系统" class="headerlink" title="构建系统"></a>构建系统</h2><p>在构建过程中，构建系统识别target的步骤是：</p><p>构建依赖的target-&gt;构建</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;研究背景-amp-简介&quot;&gt;&lt;a href=&quot;#研究背景-amp-简介&quot; class=&quot;headerlink&quot; title=&quot;研究背景&amp;amp;简介&quot;&gt;&lt;/a&gt;研究背景&amp;amp;简介&lt;/h2&gt;&lt;p&gt;在代码大规模编译系统的构建过程中的target，有时存在未充分利用（underutilized）的现象。即有些target是未充分利用的，依赖这个target只是依赖其中一部分的文件。&lt;/p&gt;
&lt;p&gt;target未充分利用的现象会导致一系列问题：代码不够模块化，不必要的构建和测试触发器，不必要的编译等待等待。如果可以将未充分利用的target分解成较小的目标，可以使得代码更加模块化，减少依赖等待时间从而加快编译速度。&lt;/p&gt;
&lt;p&gt;作者分析了Google的构建系统（Google build system），提出了两个工具DECOMPOSER和REFINER，用于识别和重构未充分利用的目标。&lt;/p&gt;
&lt;p&gt;（该论文与我组目前的研究方向十分契合，虽然需要分析的构建系统不一样但思路十分值得借鉴。）&lt;/p&gt;
    
    </summary>
    
    
      <category term="-学习 -论文阅读" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0-%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/"/>
    
    
      <category term="-论文" scheme="http://yoursite.com/tags/%E8%AE%BA%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>2019.12.11会议记录</title>
    <link href="http://yoursite.com/2020/01/09/2019.12.11%E4%BC%9A%E8%AE%AE%E8%AE%B0%E5%BD%95/"/>
    <id>http://yoursite.com/2020/01/09/2019.12.11%E4%BC%9A%E8%AE%AE%E8%AE%B0%E5%BD%95/</id>
    <published>2020-01-09T13:03:30.000Z</published>
    <updated>2020-01-12T08:55:41.241Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2019-12-11"><a href="#2019-12-11" class="headerlink" title="2019.12.11"></a>2019.12.11</h2><h3 id="一：第一阶段完善"><a href="#一：第一阶段完善" class="headerlink" title="一：第一阶段完善"></a>一：第一阶段完善</h3><p>例如：1：processtracing展开最深结点的层数可以自行选择，提供灵活的层级展示。</p><p>2：targettracing增加一个搜索功能，搜索target名可以查看相关依赖</p><p>3：targettracing图例颜色需要固定，target的类型只有固定几种，遇到新的类型再支持。</p><p>4：targettracing的箭头需要改清晰一点。</p><p>5：target依赖关系比较复杂、target数量比较多的情况需要展示在externalproject视图上。</p><p>externalproject视图需要加一些信息。</p><h3 id="二：下一阶段思路"><a href="#二：下一阶段思路" class="headerlink" title="二：下一阶段思路"></a>二：下一阶段思路</h3><p>1：对于耗时较长的进程，面向这些进程，显示其文件调用、网络I/O、内存情况等数据情况，反应当前耗时长的原因，给用户提供优化指导</p><p>2：能够分析产品架构，从构建层面上进行分析，抽象出一些概念出来。能够通过一些指标化的参数（构建架构指标），来给出产品平铺化或者平铺度不够的一些建议。</p><p>构建依赖关系能够呈现产品的关系，构建建议、构建指标、构建问题能够在实现的过程中反馈用户，指引优化。</p><p>例如：优化重点：耗时较长的target、依赖较多的target，进行详细分析</p><p>架构方面：target依赖架构的整体分析。主要是一个度量的问题。度量指标、理论基础。提供一个理论。架构的复杂度，优化度。依赖的量化。</p><p>3：分析历史构建target情况，多次历史构建结构的性能趋势分析。基于性能趋势分析给出预警。</p><p>4：分析target中文件的重复度。通过历史构建日志。</p><p>5：头文件依赖的合理性。是否有包含不需要的头文件。gcc -i -mm 消除不需要的依赖。</p><p>6：maven依赖关系？</p><h3 id="产品化建议："><a href="#产品化建议：" class="headerlink" title="产品化建议："></a>产品化建议：</h3><p>1：进程数据映射到数据对象和数据结构，匹配到用户，返回到用户视角</p><p>最终目的：构筑以软件构建为基础的构建平台，帮助用户重构和优化软件</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;2019-12-11&quot;&gt;&lt;a href=&quot;#2019-12-11&quot; class=&quot;headerlink&quot; title=&quot;2019.12.11&quot;&gt;&lt;/a&gt;2019.12.11&lt;/h2&gt;&lt;h3 id=&quot;一：第一阶段完善&quot;&gt;&lt;a href=&quot;#一：第一阶段完善&quot; cla
      
    
    </summary>
    
    
      <category term="-学习 -环境搭建" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>尝试着用下hexo框架搭建博客平台</title>
    <link href="http://yoursite.com/2020/01/09/%E5%B0%9D%E8%AF%95%E7%9D%80%E7%94%A8%E4%B8%8Bhexo%E6%A1%86%E6%9E%B6%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%B9%B3%E5%8F%B0/"/>
    <id>http://yoursite.com/2020/01/09/%E5%B0%9D%E8%AF%95%E7%9D%80%E7%94%A8%E4%B8%8Bhexo%E6%A1%86%E6%9E%B6%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%B9%B3%E5%8F%B0/</id>
    <published>2020-01-09T13:03:30.000Z</published>
    <updated>2020-02-01T14:32:26.644Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装hexo组件"><a href="#安装hexo组件" class="headerlink" title="安装hexo组件"></a>安装hexo组件</h2><p>首先容我吐槽一下，这篇文章是一边安装hexo、搭建hexo-next主题时候一边写的，安装的过程比我想象中的还是麻烦太多太多了我佛了。（当然主要是自己踩了很多的坑）</p><p>首先保证全局安装git以及node.js（npm），这个不多赘述，直接上git和node.js的官网下载安装就行，网上也有很多教程，安装时也有图形化的提示，直接照着提示来就行。</p><p>一定要保证全局安装。</p><p>然后建立一个空文件夹，右键-&gt;Git bash here，一定要是新建的空的文件夹，后面称之为根目录。</p><a id="more"></a><p>在git bash中输入以下指令并运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo</span><br></pre></td></tr></table></figure><p>下载安装好hexo后，运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init</span><br></pre></td></tr></table></figure><p>初始化hexo组件，至此一个简单的hexo博客的框架已经搭建好了。</p><p>安装后的结果如图所示</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2020/01/09/%E5%B0%9D%E8%AF%95%E7%9D%80%E7%94%A8%E4%B8%8Bhexo%E6%A1%86%E6%9E%B6%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%B9%B3%E5%8F%B0/image-20200109223212975.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><p>站点配置文件为hexo根目录下的_config.yml，我们称之为站点配置文件，要注意的是后面还有一个主题配置文件，文件名一样但路径不同，要注意区分。</p><p>可以在站点配置文件_config.yml中，找到以下片段并修改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">title: XXX&#39;s Blog</span><br><span class="line">author: XXX</span><br><span class="line">language: zh-CH           #中文</span><br><span class="line"></span><br><span class="line">theme: next</span><br><span class="line"></span><br><span class="line">deploy:</span><br><span class="line">type: git</span><br><span class="line">repo: git@github.com:XXX&#x2F;XXX.github.io.git #你的GitHub网址</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure><h2 id="本地部署"><a href="#本地部署" class="headerlink" title="本地部署"></a>本地部署</h2><p>运行以下指令，即可在本地直接部署hexo博客</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>访问<code>http://localhost:4000</code> 即可查看主页</p><p>修改配置文件和markdown文章时，一般只需要刷新就可以展示修改后的内容。</p><p>如果文件名等发生改变，需要重启本地服务器，也就是再运行一次以上指令。</p><h2 id="安装及修改主题"><a href="#安装及修改主题" class="headerlink" title="安装及修改主题"></a>安装及修改主题</h2><p>hexo基础框架搭建好后，我们可能需要更加完善的博客功能和更加美观的界面。</p><h3 id="安装hexo-indigo主题插件"><a href="#安装hexo-indigo主题插件" class="headerlink" title="安装hexo-indigo主题插件"></a>安装hexo-indigo主题插件</h3><p>hexo-indigo是一款基于hexo的主题插件，包含更完善的功能和更美观的主题界面，访问hexo-theme-material-indigo的主页wiki，<a href="https://github.com/yscoder/hexo-theme-indigo/wiki" target="_blank" rel="noopener">https://github.com/yscoder/hexo-theme-indigo/wiki</a>，获取安装教程</p><p>需要在themes/下安装主题，在根目录下运行git bash，运行以下指令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;yscoder&#x2F;hexo-theme-indigo.git themes&#x2F;indigo</span><br></pre></td></tr></table></figure><p>下载indigo主题。</p><p>在站点配置文件<code>_config.yml</code>中修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: indigo</span><br></pre></td></tr></table></figure><p>即可启用indigo主题</p><p>其余必要的修改见上面提到的主页wiki，主题配置文件<code>themes/indigo/_config.yml</code>中有必要的注释，方便易懂每个配置项是什么。</p><h3 id="安装hexo-next主题插件"><a href="#安装hexo-next主题插件" class="headerlink" title="安装hexo-next主题插件"></a>安装hexo-next主题插件</h3><p>hexo-next是另一款基于hexo的主题插件，使用方法类似，在站点配置文件<code>_config.yml</code>中修改：，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure><p>可以访问hexo-next的主页<a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">http://theme-next.iissnan.com/getting-started.html</a> ，获取安装教程</p><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p>hexo框架安装了主题后，整体有两个配置文件。</p><p>一个是站点配置文件<code>_config.yml</code></p><p>一个是主题配置文件<code>themes/indigo/_config.yml</code></p><p>此后有很多需要修改的地方，要注意是修改哪个配置文件。</p><h2 id="撰写文章"><a href="#撰写文章" class="headerlink" title="撰写文章"></a>撰写文章</h2><p>hexo框架的博客文章来源于博客目录下的<code>/source/_post</code>里的.md文件</p><p>写好自己的md文件放到这个文件夹下，就可以在博客页面上展示了。</p><p>建议用typora来写自己的markdown文件，也就是写文章，操作方便。</p><p>撰写的文章在前端会全部展示，如果想展示一部分，其它的隐藏起来用阅读全文按钮包装，则只需要在自己的md文件里加上</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--more--&gt;</span><br></pre></td></tr></table></figure><p>这个标签以后的内容会隐藏起来，点击阅读全文才会显示。</p><p>效果如图。</p><h2 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h2><p>默认的Hexo是无法插入图片的。需要安装hexo图片插件</p><p>运行以下指令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure><p>安装好后，打开站点配置文件<code>_config.yml</code>，修改内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder: true</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装hexo组件&quot;&gt;&lt;a href=&quot;#安装hexo组件&quot; class=&quot;headerlink&quot; title=&quot;安装hexo组件&quot;&gt;&lt;/a&gt;安装hexo组件&lt;/h2&gt;&lt;p&gt;首先容我吐槽一下，这篇文章是一边安装hexo、搭建hexo-next主题时候一边写的，安装的过程比我想象中的还是麻烦太多太多了我佛了。（当然主要是自己踩了很多的坑）&lt;/p&gt;
&lt;p&gt;首先保证全局安装git以及node.js（npm），这个不多赘述，直接上git和node.js的官网下载安装就行，网上也有很多教程，安装时也有图形化的提示，直接照着提示来就行。&lt;/p&gt;
&lt;p&gt;一定要保证全局安装。&lt;/p&gt;
&lt;p&gt;然后建立一个空文件夹，右键-&amp;gt;Git bash here，一定要是新建的空的文件夹，后面称之为根目录。&lt;/p&gt;
    
    </summary>
    
    
      <category term="-学习 -环境搭建" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="-hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
</feed>
